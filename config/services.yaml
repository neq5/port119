# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    aboutdir: '%kernel.root_dir%/../userdata/about'
    sigdir: '%kernel.root_dir%/../userdata/sig'
    aboutgroupdir: '%kernel.root_dir%/../groupdata/about'
    contentdatadir: '%kernel.root_dir%/../groupdata/content'
    contentimgdir: "%kernel.root_dir%/../public/content/img"
    avatardir: '%kernel.root_dir%/../public/avatar'
    groupavatardir: '%kernel.root_dir%/../public/groupavatar'
    gallerydir: '%kernel.root_dir%/../public/gallery'
    walldir: '%kernel.root_dir%/../wall'
    cdir: '%kernel.root_dir%/../comments'
    gcdir: '%kernel.root_dir%/../gallery_comments'
    facebook_client_id: "2410465105923571"
    facebook_secret: "25cef29759c22c1fe5ad0b8bbbc30e7c"
    googleplus_client_id: "428367507179-7nsf5k9hedmnr22bqdlon246tvjbtphn"
    googleplus_secret: "AotzVV60Pxv59b4xRtp3Tr-P"
    page_items: "50"
    threads_page_items: "50"
    host: "https://port119.pl"

services:
   app.form.registration:
    class: App\Form\RegistrationType
    tags: 
    - { name: form.type, alias: app_user_registration }

   App\UserBundle\EventListener\AvatarAddRegister:
        tags: 
          - { name: kernel.event_subscriber }

    # default configuration for services in *this* file
   _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
   App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
   App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

   gedmo.listener.tree:
        class: Gedmo\Tree\TreeListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }

   App\Controller\RegistrationController:
        public: true
        tags: ['controller.service_arguments']
        calls:
          - method: setContainer
            arguments:
                    - '@service_container'
        arguments:
          $formFactory: '@fos_user.registration.form.factory'
    #    tags: ['controller.service_arguments']
     #   arguments:
          $eventDispatcher: '@event_dispatcher'
       #     $formFactory: '@fos_user.registration.form.factory'
          $userManager: '@fos_user.user_manager'
          $tokenStorage: '@security.token_storage'
   app.fos_user.oauth_provider:
     class: App\Entity\FOSUBUserProvider
           #class: App\Entity\OAuthUserProvider
           #class: App\Security\Core\User\OAuthUserProvider
           #class: HWI\Bundle\OAuthBundle\Security\Core\User\FOSUBUserProvider
           #arguments: ['@fos_user.user_manager', {facebook: facebook_id}]
           #arguments: ['@fos_user.user_manager', {facebook: facebook_id}]
           #arguments: ['@fos_user.user_manager', {facebook: facebook_id}]
     arguments: ['@fos_user.user_manager', {facebook: facebook_id}, '@doctrine.orm.entity_manager']

     # user_manager: "@fos_user.user_manager"
     #user_response:
     #         facebook: facebook_id

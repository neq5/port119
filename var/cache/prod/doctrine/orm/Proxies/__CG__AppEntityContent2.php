<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Content2 extends \App\Entity\Content2 implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'groups', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'accounts', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'lft', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'lvl', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'rgt', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'root', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'parent', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'children', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'content', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'deleted', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'todelete', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'created_at', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'image'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'groups', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'accounts', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'lft', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'lvl', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'rgt', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'root', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'parent', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'children', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'content', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'deleted', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'todelete', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'created_at', '' . "\0" . 'App\\Entity\\Content2' . "\0" . 'image'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Content2 $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage($image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoot()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoot', []);

        return parent::getRoot();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent(\App\Entity\Content2 $parent = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', [$parent]);

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', []);

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function getGroups(): ?\App\Entity\Group
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroups', []);

        return parent::getGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroups($groups)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroups', [$groups]);

        return parent::setGroups($groups);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccounts(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccounts', []);

        return parent::getAccounts();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccounts(?\App\Entity\User $accounts): \App\Entity\Content2
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccounts', [$accounts]);

        return parent::setAccounts($accounts);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTimeInterface $created_at): \App\Entity\Content2
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$created_at]);

        return parent::setCreatedAt($created_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getContent(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContent', []);

        return parent::getContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setContent(?bool $content): \App\Entity\Content2
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContent', [$content]);

        return parent::setContent($content);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeleted(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeleted', []);

        return parent::getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeleted(?bool $deleted): \App\Entity\Content2
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeleted', [$deleted]);

        return parent::setDeleted($deleted);
    }

    /**
     * {@inheritDoc}
     */
    public function getTodelete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTodelete', []);

        return parent::getTodelete();
    }

    /**
     * {@inheritDoc}
     */
    public function setTodelete($todelete)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTodelete', [$todelete]);

        return parent::setTodelete($todelete);
    }

}
